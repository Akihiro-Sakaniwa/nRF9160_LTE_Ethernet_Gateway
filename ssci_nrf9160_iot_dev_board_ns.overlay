// To get started, press Ctrl+Space (or Option+Esc) to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html
/ {
    chosen {
        zephyr,console = &uart0;
        //zephyr,shell-uart = &uart0;
        //zephyr,uart-mcumgr = &uart0;
        nordic,pm-ext-flash = &mx25r64;
    };
};
/delete-node/ &uart0_default;
/delete-node/ &uart0_sleep;
&uart0 {
	compatible = "nordic,nrf-uarte";
	reg = <0x8000 0x1000>;
	interrupts = <8 NRF_DEFAULT_IRQ_PRIORITY>;
	pinctrl-0 = <&uart00_default>;
	pinctrl-1 = <&uart00_sleep>;
	status = "okay";
	current-speed = <115200>;
	pinctrl-names = "default", "sleep";
};
&spi1 {
	compatible = "nordic,nrf-spim";
	status = "okay";

	cs-gpios = <&gpio0 4 GPIO_ACTIVE_LOW>;

	pinctrl-0 = <&spi1_default>;
	pinctrl-1 = <&spi1_sleep>;
	pinctrl-names = "default", "sleep";
	eth0: eth0@0 {
		//compatible = "microchip,enc424j600";
		compatible = "wiznet,w5500";
		//compatible = "microchip,enc28j60";
		reg = <0>;
		spi-max-frequency = <80000000>;
        int-gpios = <&gpio0 7 GPIO_ACTIVE_LOW>;
        //reset-gpios = <&gpio0 5 GPIO_ACTIVE_LOW>;
		//local-mac-address = [XX XX XX XX XX XX]
    };
};
&spi3 {
	status = "okay";
	mx25r64: mx25r6435f@0 {
		status = "okay";
	};
};
&pinctrl {
	uart00_default: uart00_default {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 29)>,
				<NRF_PSEL(UART_RX, 0, 28)>;
		};
	};
	uart00_sleep: uart00_sleep {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 29)>,
				<NRF_PSEL(UART_RX, 0, 28)>;
		};
	};
	spi1_default: spi1_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 3)>,
				<NRF_PSEL(SPIM_MOSI, 0, 0)>,
				<NRF_PSEL(SPIM_MISO, 0, 1)>;
		};
	};

	spi1_sleep: spi1_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 3)>,
				<NRF_PSEL(SPIM_MOSI, 0, 0)>,
				<NRF_PSEL(SPIM_MISO, 0, 1)>;
			low-power-enable;
		};
	};
};